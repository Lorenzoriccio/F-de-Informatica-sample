#url a gatos: https://http.cat/

# Apuntes de clase
import requests 
prendas = requests.get('https://macowins-server.herokuapp.com/prendas')
print(prendas) 
# Si nos da una respuesta, el canal de comunicaci√≥n funciona 
print(prendas.json()) 
# Json es un diccionario python 
# Json es el formato en el cual los servidores devuelven la informaci√≥n al cliente 
print(len(prendas.json()))  
# Averiguamos la cantidad de prendas (recursos) que tiene
print(prendas.headers) 
# Headers me dice toda la metadata (la informaci√≥n del pedido)

# Gu√≠a te√≥rica de HTTP & REST
# Desaf√≠o I: Hac√© otro pedido para traer a la prenda 20. Deber√≠as obtener el siguiente resultado:
r20 = requests.get('https://macowins-server.herokuapp.com/prendas/20')
print(r20.json()) 

# Desaf√≠o II: ¬°averigualo! Hac√© requests.get('https://macowins-server.herokuapp.com/prendas/400') y observ√° qu√© sucede.
# Quiero ver si tiene 400
r400 = requests.get('https://macowins-server.herokuapp.com/prendas/400') 
print(r400)
# Tira error 404 porque no pudo encontrar y traerme el recurso, eso se lo denomina Status Code 

# Desaf√≠o III: contrast√° con lo que sucede al hacer get de 'https://macowins-server.herokuapp.com/prendas/1' ¬øQu√© te devuelve el m√©todo headers? ¬øQu√© status_code obtenes?
r1 = requests.get('https://macowins-server.herokuapp.com/prendas/1')
print(r1.headers) 
print(r1.status_code) 
# El Status Code es 200

# Desaf√≠o IV: ¬øy que suceder√° si consultamos a una direcci√≥n que no existe, como por ejemplo https://macowins-server.herokuapp.com/prindas/1? ¬°Averigualo!
r1 = requests.get('https://macowins-server.herokuapp.com/prindas/1')
print(r1) # <Response [404]>

# Desaf√≠o V: hac√© requests.get('https://macowins-server.herokuapp.com/ventas') y requests.get('https://macowins-server.herokuapp.com/ventas/2)' y contrast√° el resultado con tu respuesta anterior
ventas = requests.get('https://macowins-server.herokuapp.com/ventas')
v2 = requests.get('https://macowins-server.herokuapp.com/ventas/2')
print(v2) # <Response [200]>
print(v2) # <Response [200]>

# Desaf√≠o VI: Obten√© las remeras.
pedido_remeras = requests.get('https://macowins-server.herokuapp.com/prendas?tipo=remera')
print(pedido_remeras.json())

# Desaf√≠o VII: Obten√© las remeras XS
pedido_remeras_xs = requests.get('https://macowins-server.herokuapp.com/prendas?tipo=remera&talle=XS')
print(pedido_remeras_xs.json()) 

# Desaf√≠o VIII: dec√≠ usando tus palabras qu√© significa la URI de este ejemplo cerebral üòõ.
'''Las URI son un formato estandarizado de strings'''

# Desaf√≠o IX: ¬øa trav√©s de qu√© IP acced√©s a google desde tu computadora?
'''Las IP son el identificatorio de cada computadora. Una direcci√≥n IP es una direcci√≥n √∫nica que identifica 
a un dispositivo en Internet o en una red local. IP significa ‚Äúprotocolo de Internet‚Äù, que es el conjunto de 
reglas que rigen el formato de los datos enviados a trav√©s de Internet o la red local.
Cuando accedes a Google est√°s usando 8.8.8.8. o 8.8.4.4¬ø?'''

# Desaf√≠o X: ¬øQu√© devolver√° la p√°gina principal (home) de nuestro sitio? Averigu√° el Content-Type de /home
print(r1.headers)
'''{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Expires': '-1', 'Content-Type': 'application/json; 
charset=utf-8', 'Content-Length': '49', 'Etag': 'W/"31-OlDFK7SS8oU(CKcn/LZE2poJFDDo"', 'Vary': 'Accept-Encoding', 'Date': 'Mon, 06 Jun 2022 12:04:12 GMT', 'Via': '1.1 vegur'}'''

# Desaf√≠o XI: consult√° 4 sitios diferentes y averigu√° para todos ellos qu√© servidor utilizan, si el contenido se transfiere encriptado, y la fecha de expieraci√≥n del contenido.
ml = requests.get('https://www.mercadolibre.com.ar/#from=homecom')
print(ml.headers)
'''Expires=Thu, 08 Jun 2023 16:45:58 GMT;'content-encoding': 'gzip;'Server': 'Tengine' '''
ps = requests.get('https://www.playstation.com/es-ar/')
print(ps.headers)
''''Expires': 'Wed, 08 Jun 2022 16:41:12 GMT';'Content-Encoding': 'gzip';'Server': 'Apache' '''
netflix = requests.get('https://www.netflix.com/ar/login')
print(netflix.headers) 
''''Expires=Thu, 8 Jun 2023 16:36:22 GMT;'Content-Encoding': 'gzip';'Server': 'nq_website_nonmember-prod-release 84ee2c12-8b52-4d46-baa4-9378ee9e7b0d' '''
yt = requests.get('https://www.youtube.com/')
print(yt.headers)
''' 'Expires=Mon, 05-Dec-2022 16:28:03 GMT;Content-Encoding': 'gzip';'Server': 'ESF' '''

# Desaf√≠o XII: ¬øqu√© c√≥digo de estado devuelve cuando un recurso es creado? Averigualo
import json, requests
r = requests.get('https://macowins-server.herokuapp.com/prendas')
data = {'id': 21}
r = requests.post('https://macowins-server.herokuapp.com/prendas/', data=data)
headers = {'Content-type': 'application/json', 'Accept': 'text/plain'}
data =  { "tipo": "chomba", "talle": "XS" }
r = requests.post('https://macowins-server.herokuapp.com/prendas/', data=json.dumps(data), headers=headers)
print(r.status_code)
print(r.json()) 
#haciendo POST sobre la ruta de /prendas creamos una prenda, sin especificar un id, dado que se generar√° solo. 
#de todas formas, si quisieramos podr√≠amos haberlo especificado agreg√°ndolo en el cuerpo.
'''
201
{'tipo': 'chomba', 'talle': 'XS', 'id': 'xX_hbCG'} '''

# Desaf√≠o: Nos quedaron prendas con ids que no nos sirven; ¬°borralas!
# Desaf√≠o XIII: Cre√° una venta.

# Desaf√≠o XIV: Intent√° hacer POST sobre una venta concreta, como por ejemplo https://macowins-server.herokuapp.com/prendas/1. ¬øQu√© sucede? 
data = {'id':21, 'tipo': 'chomba', 'talle': 'XL'}
post = requests.post('https://macowins-server.herokuapp.com/prendas/', data=data)  
print(post.status_code)

# Desaf√≠o XV: ¬øcuales de los siguientes sitios tiene (o parecen tener, al menos) rutas REST?
'''Respuestas: Infobae, Pagina12, La Nacion - UNQ, UCEMA - Github'''

# Desaf√≠o XVI: si no se organizan de forma REST, ¬øc√≥mo se organizan sus rutas?
# Desaf√≠o XVII: ¬øEn d√≥nde est√° desplegado QMP? ¬øPod√©s averiguarlo las cabeceras HTTP y/o la URL?


# Gu√≠a te√≥rica de Maquetado Web
# Desafio I: Busc√° qu√© otras etiquetas existen y para qu√© sirven
'''Ejemplo de algunas etiquetas m√°s:
<section> = representa una secci√≥n gen√©rica de un documento
<div> = sirve para crear secciones o agrupar contenidos
<span> = sirve para aplicar estilo al texto o agrupar elementos en l√≠nea
<ul> = para hacer listas  '''

# Desafio II :Cre√° un archivo de texto con la herramienta que tengamos a mano (visual code, editor de texto, bloc de notas,etc) y lo guardamos con el nombre ‚Äúmi_pagina‚Äù con extensi√≥n ‚Äú.html‚Äù : ‚Äúmi_cv.html‚Äù
# Listo
# Desafio IV: Busc√° qu√© otras etiquetas sem√°nticas existen
'''Otras etiquetas sem√°nticas: 
<aside> = marca un trozo de contenido que est√° relacionado con el contenido de la p√°gina web, pero que no es parte del mismo (ex. glosario)
<main> = representa el contenido predominante de la p√°gina.'''
# Desafio V: Busc√° qu√© otros atributos existen y dale estilo al documento HTML creado en el Desaf√≠o II
# Listo
# Desaf√≠o VI: Investig√° en la documentaci√≥n de ipywidgets qu√© otros elementos HTML pod√©s mostrar y probalos

'''
Requisitos para el ex√°men: 
url: http://miapp.com/...
http: protocolo
miapp.com: dominio 
... : ruta 

'''